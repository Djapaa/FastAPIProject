version: '3.8'

services:
  web-app:
    container_name: fastapi-app
    build: .
    ports:
      - "${APP_HOST_PORT}:8000"
    volumes:
      - ./app:/app
    restart: always
    env_file:
      - .env
    command: 'python -m uvicorn src.main:app --host 0.0.0.0 --reload'
    depends_on:
      - database


  database:
    container_name: postgres
    image: postgres:14.6-alpine
    ports:
      - "15432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - ~/pgdata2:/var/lib/postgresql/data

  database-test:
    container_name: postgres-test1
    image: postgres:14.6-alpine
    ports:
      - "15433:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${TEST_DB_NAME}
      - POSTGRES_USER=${TEST_DB_USER}
      - POSTGRES_PASSWORD=${TEST_DB_PASS}
    volumes:
      - ~/pgdata-test:/var/lib/postgresql/data


  worker:
    container_name: celery-worker
    build: .
    volumes:
      - ./app:/app
    restart: always
    env_file:
      - .env
    command: python -m celery -A src.config.celery_conf.celery worker --loglevel=info
    depends_on:
      - database
      - redis

  beat:
    container_name: celery-beat2
    build: .
    restart: always
    command: python -m celery -A src.config.celery_conf.celery beat --loglevel=info

    volumes:
      - ./app:/app

    depends_on:
      - database
      - redis
    env_file:
      - .env

  flower:
    build:
      context: .
    hostname: flower
    command: python -m celery -A src.config.celery_conf.celery flower

    volumes:
      - ./app:/app

    ports:
      - "5555:5555"

    env_file:
      - .env

    depends_on:
      - database
      - redis
      - web-app



  redis:
    image: redis:7.0.5-alpine
    container_name: redis-fast-api
    ports:
      - "16379:6379"
    command:
      - 'redis-server'
